---
---
<div class="chat-box" client:load>
    <div id="messages" class="messages"></div>
    <div class="input-area">
        <input type="text" id="messageInput" placeholder="Escribe un mensaje..." onkeypress="handleKeyPress(event)">
        <button onclick="sendMessage()">Enviar</button>
    </div>
</div>

<style>
.chat-box {
    background: white;
    border-radius: 10px;
    padding: 15px;
    margin-top: 20px;
    width: 320px;
    height: 400px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

.messages {
    height: 320px;
    overflow-y: auto;
    padding: 10px;
    background: #f5f5f5;
    border-radius: 5px;
}

.message {
    background: rgb(0, 0, 0);
    padding: 8px;
    margin-bottom: 8px;
    border-radius: 5px;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
}

.message-text {
    display: block;
    margin-bottom: 4px;
}

.message-time {
    font-size: 0.8em;
    color: #666;
}

.input-area {
    margin-top: 10px;
    display: flex;
    gap: 10px;
}

.input-area input {
    flex: 1;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

.input-area button {
    padding: 8px 15px;
    background: #1e90ff;
    color: white;
    border-radius: 5px;
    cursor: pointer;
    border: none;
    transition: background 0.2s;
}

.input-area button:hover {
    background: #1873cc;
}
</style>

<script>
import { initializeApp } from 'firebase/app';
import { getDatabase, ref, push, onValue, query, limitToLast, remove, get } from 'firebase/database';

const firebaseConfig = {
  apiKey: "AIzaSyDNvjP735YhjGtJt8j8L29mvdUuFVZR-Q",
  authDomain: "chat-en-tiempo-real-adobos.firebaseapp.com",
  projectId: "chat-en-tiempo-real-adobos",
  storageBucket: "chat-en-tiempo-real-adobos.appspot.com",
  messagingSenderId: "678547735797",
  appId: "1:678547735797:web:501e1f44a0b98ca52c0db3",
  databaseURL: "https://chat-en-tiempo-real-adobos-default-rtdb.firebaseio.com"
};


const app = initializeApp(firebaseConfig);
const db = getDatabase(app);
const messagesRef = ref(db, 'messages');

// Función para limpiar mensajes antiguos
async function cleanOldMessages() {
    const messagesSnapshot = await get(messagesRef);
    const messages = messagesSnapshot.val();
    
    if (messages) {
        const messageArray = Object.entries(messages);
        if (messageArray.length > 100) {
            const messagesToDelete = messageArray
                .sort(([,a], [,b]) => b.timestamp - a.timestamp)
                .slice(100);
            
            messagesToDelete.forEach(([key]) => {
                remove(ref(db, `messages/${key}`));
            });
        }
    }
}

// Modificar la escucha de mensajes para usar limitToLast
const messagesQuery = query(messagesRef, limitToLast(100));
onValue(messagesQuery, (snapshot) => {
    const messages = snapshot.val();
    const messagesDiv = document.getElementById('messages');
    messagesDiv.innerHTML = '';
    
    if (messages) {
        Object.entries(messages)
            .sort(([,a], [,b]) => a.timestamp - b.timestamp)
            .forEach(([key, message]) => {
                const messageElement = document.createElement('div');
                messageElement.className = 'message';
                messageElement.innerHTML = `
                    <span class="message-text">${message.text}</span>
                    <span class="message-time">${new Date(message.timestamp).toLocaleTimeString()}</span>
                `;
                messagesDiv.appendChild(messageElement);
            });
        
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }
});

// Modificar la función de envío para incluir la limpieza
window.sendMessage = () => {
    const input = document.getElementById('messageInput');
    const message = input.value.trim();
    
    if (message) {
        push(messagesRef, {
            text: message,
            timestamp: Date.now()
        });
        input.value = '';
        cleanOldMessages(); // Limpiar mensajes antiguos después de enviar uno nuevo
    }
};

// Add this new function to handle Enter key
window.handleKeyPress = (event) => {
    if (event.key === 'Enter') {
        sendMessage();
    }
};
</script>